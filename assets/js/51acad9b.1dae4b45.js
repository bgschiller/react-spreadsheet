"use strict";(self.webpackChunkreact_spreadsheet=self.webpackChunkreact_spreadsheet||[]).push([[101],{7245:function(e,r,t){t.r(r),t.d(r,{assets:function(){return i},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return u}});var a=t(3117),n=(t(7294),t(3905));const o={id:"formula-parser",title:"Formula Parser"},s="Formula Parser",l={unversionedId:"formula-parser",id:"formula-parser",title:"Formula Parser",description:"Default",source:"@site/docs/03-formula-parser.md",sourceDirName:".",slug:"/formula-parser",permalink:"/react-spreadsheet/docs/formula-parser",draft:!1,editUrl:"https://github.com/iddan/react-spreadsheet/tree/master/website/docs/03-formula-parser.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"formula-parser",title:"Formula Parser"},sidebar:"sidebar",previous:{title:"Usage",permalink:"/react-spreadsheet/docs/usage"},next:{title:"Contributing",permalink:"/react-spreadsheet/docs/contributing"}},i={},u=[{value:"Default",id:"default",level:2},{value:"Custom formula parser",id:"custom-formula-parser",level:2},{value:"Overriding formulas",id:"overriding-formulas",level:2}],c={toc:u};function p(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"formula-parser"},"Formula Parser"),(0,n.kt)("h2",{id:"default"},"Default"),(0,n.kt)("p",null,"By default, a regular formula parser (based on ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/LesterLyu/fast-formula-parser"},"Fast Formula Parser"),") is created.\nWith this come all the formulas and implementations from the Fast Formula Parser."),(0,n.kt)("h2",{id:"custom-formula-parser"},"Custom formula parser"),(0,n.kt)("p",null,"It is possible to pass a construction function for a formula parser to the ",(0,n.kt)("inlineCode",{parentName:"p"},"<Spreadsheet />")," component by assigning it to the ",(0,n.kt)("inlineCode",{parentName:"p"},"createFormulaParser")," prop. This should be an implementation of the FormulaParser as defined in the Fast Formula Parser library, hence this library should be added as dependency. The",(0,n.kt)("inlineCode",{parentName:"p"},"react-spreadsheet")," library also exposes a function ",(0,n.kt)("inlineCode",{parentName:"p"},"createFormulaParser")," to quickly create the implementation as used by default."),(0,n.kt)("h2",{id:"overriding-formulas"},"Overriding formulas"),(0,n.kt)("p",null,"The Fast Formula Parser library allows overriding of the formulas as implemented.\nTo leverage this, one could for example disable the ",(0,n.kt)("inlineCode",{parentName:"p"},"SUM")," function as follows."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'import Spreadsheet, {\n  createFormulaParser,\n  Matrix,\n  CellBase,\n} from "react-spreadsheet";\n\nconst customCreateFormulaParser = (data: Matrix<CellBase>) =>\n  createFormulaParser(data, { SUM: undefined });\n\nconst MyComponent = () => {\n  return (\n    <Spreadsheet data={[]} createFormulaParser={customCreateFormulaParser} />\n  );\n};\n')))}p.isMDXComponent=!0},3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return f}});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=a.createContext({}),u=function(e){var r=a.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=u(e.components);return a.createElement(i.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(t),f=n,d=m["".concat(i,".").concat(f)]||m[f]||p[f]||o;return t?a.createElement(d,s(s({ref:r},c),{},{components:t})):a.createElement(d,s({ref:r},c))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var u=2;u<o;u++)s[u]=t[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);